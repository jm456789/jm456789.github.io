---
layout: post

title: "C-Day5 2021-05-27. "
excerpt: "void형 포인터, 표준입력함수(rewind, getchar, getc, gets, atoi, scanf)"

categories:
  - C
tags:
  - [C]
  
toc: true
toc_sticky: true
 
date: 2021-05-30
last_modified_at: 2021-05-30
---

### void *형 포인터

* <u>주소 값을 저장</u>할 수는 있지만 해당 주소에서 값을 읽거나 저장할 때 사용하는 <u>크기는 정해져 있지 않다.</u>
* 즉 사용할 메모리의 <u>시작 주소</u>만 알고 끝 주소를 모를 때 사용하는 포인터 형식이다.
* void * 는 주소를 사용할 때 반드시 '사용할 크기'를 표기해야 한다.

```c++
int data = 0;
void *p = &data; //data의 시작 주소를 저장함
*p = 5 //오류 발생. 대상 메모리의 크기가 지정되지 않음.

int data = 0;
void *p = &data;
*(int *)p = 5; //형 변환 문법을 사용하여 대상의 크기를 4바이트로 지정하므로 data 변수에 5가 저장됨
```

---

예제) void *를 사용항 대상 메모리의 크기 조절하기
```c++
int GetData(void *p_data, char type){
    int result = 0;

    if(type == 1){
        result = *(char *)p_data; 
    }else if(type == 2){
        result = *(short *)p_data;
    }else if(type == 4){
        result = *(int *)p_data;
    }
    return result;
}
void main(){
    int data = 0x12345678;
    printf("%x", GetData(&data, 2));
}
//결과 -> 5678
```

---

# 14. 표준 입력 함수

### 표준 입력 함수

##### 표준 입력 함수란?

> 다양한 입력 장치 중에 사용하는 시스템이 가장 기본으로 생각하는 장치를 '표준입력장치' 라고 부른다. ex) 키보드

---

##### 입력 버퍼를 초기화하는 rewind 함수

```c++
rewind(stdin); //rewind 함수를 사용하면 입력 버퍼를 초기화 할 수 있음
```

---

##### 문자 한 개를 입력 받는 getchar, getc 함수

* char 들어간건 무조건 한 글자
* 두개의 차이점을 모르겠다. 그냥 한글자 받을 때 쓰는 함수들인듯 하다.

예제) getchar 함수를 사용할 때 주의할 점
```c++
void main(){
    int input_data;

    input_data = getchar();
    printf("first : %c\n", input_data);

    input_data = getchar();
    printf("second : %c\n", input_data);
}
//결과
//a
//first : a
//second :
```

엔터도 문자로 인식해서 버퍼를 초기화해주는 rewind(stdin)을 사용해줘야 한다.

---

##### 문자열을 입력 받는 gets 함수

* gets 함수는 <u>한 번에 여러 개의 문자</u>를 입력받을 수 있으며, 엔터 키를 입력할 때까지 모든 문자를 <u>하나의 문자열로 간주</u>한다.
* 문자열을 저장하기 위해서 선언된 변수의 <u>시작 주소를 넘겨줘야 한다.</u>

```c++
void main(){
    char input_string[10];
    gets(input_string);   //gets를 안쓰고 input_string만쓰면 주소값만 출력된다.
    printf("input : %s", input_string);
}
```

---

ptr = &일반주소
ptr = 배열은 & 안써줘도 된다.

gets를 실행하고 나오는 값이 NULL(문자출력 X)이냐 NULL이 아니냐(문자출력)

---

```c++
void main(){
    char input_string[10];
    if(NULL != gets(input_string)){
        printf("input : %s", input_string);
    }else{
        printf("input -> cancled");
    }
}
```

위의 예제는 문자를 9개까지만 저장할 수 있다. 끝에 NULL값(엔터값)이기 때문에

---

##### 문자열을 정수로 변환하기

gets 함수를 사용하면 1234같은 숫자를 입력해도 정수가 아닌 문자열로 인식한다.
그렇기 때문에 atoi라는 함수를 사용하여 문자열을 정수로 변환한다.

```c++
#include <stdlib.h> //atoi 함수를 사용하기 위해 포함
void main(){
    int first_num, second_num;
    char first_string[16], second_string[16];

    printf("input first number : ");
    gets("first_string");

    printf("input second number :");
    gets("second_string");

    first_num = atoi(first_string);
    second_num = atoi(second_string);

    printf("%d + %d = %d", first_num, second_num, first_num + second_num);
}
```

---

### 표준 입력함수 scanf

getchar 함수는 하나의 문자를 입력받는 함수이고
gets 함수는 문자열을 입력받는 함수이다.
그러나 scanf 함수는 문자, 문자열, 정수, 실수 모두 입력받을 수 있도록 형식화된 입력을 제공한다.

| 키워드  | %d  | %hd  | %f  | %lf  | %c  | %s  |
|---|---|---|---|---|---|---|
| 입력 형식  | 정수 int  | 정수 short int  |  실수 float | 실수 double  | 문자  | 문자열  |

```c++
int data;
scanf("%d", &data);
//scanf 함수의 기본 형태
```

```c++
void main(){
    int int_data;
    float float_data;

    scanf("%d", &int_data);
    scanf("%f", &float_data);

    printf("input : %d, %f", input_data, float_data);
}
```

* scanf 함수 입력 값의 구별은 엔터나 공백(space)문자로도 가능하다.
* 그리고 이 함수는 엔터키나 공백이 여러개 입력되면 무시하고 실제 정보를 기준으로 입력을 받아들인다. -> 아무리 엔터를 눌러도 skip한다.
* 그렇기때문에 사용자가 입력하는 <u>문자열에 공백이 포함</u>된다면 <u>gets함수를 사용</u>하는것이 좋다.

---

##### scanf 함수는 입력 형식 키워드와 자료형이 일치해야 한다

```c++
char data1 = 5;
short data2 = 6;
int data3 = 7;
printf("%d %d %d", data1, data2, data3) //정상적으로 5,6,7 출력
scanf("%d %d %d", &data1, &data2, &data3); //번역할 때 오류는 없지만 실행할 때 문제 발생. (data1, data2가 자료형이 다름)
```

| 입력 형식 키워드  | 변수 자료형  |
|---|---|
| %c  | char, unsigned char  |
| %o, %d %x  | int, unsigned int  |
| %f  | float  |
| %lf  | double  |
| %s  | char*, char[]  |

---

예제) scanf 함수를 사용하여 나이 입력 받기

```c++
void main(){
    int num = 0;

    while(1){   //무한루프
        printf("input age : ");

        if( scanf("%d", &num) == 0 ){   //숫자가 아닌 값을 입력하면 0
            rewind(stdin);
            printf("[Enter] digit number! \n");
        }else{
            if(num > 0 && num < 130){
                break;   //정상적으로 입력되었기 때문에 반복문을 빠져나감
            }else{
                printf("incorrect age!\n"); //나이의 범위가 잘못입력
            }
        }

    }
    printf("your age : %d", num); //입력된 나이 출력
}
```
