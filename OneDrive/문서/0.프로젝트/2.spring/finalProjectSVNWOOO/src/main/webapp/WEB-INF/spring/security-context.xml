<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>
	<bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean>
	<bean id="customUserDetailsService" class="org.zerock.security.CustomUserDetailsService"></bean>
	 
	<!-- <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /> -->
	<!-- <bean id="customUserDetailsService" class="org.zerock.security.CustomUserDetailsService"></bean> -->
	
	<security:http auto-config="true" use-expressions="true">
	
	
	
		<security:intercept-url pattern="/sample/all"
			access="hasRole('ROLE_USER')" />
<!-- 					<security:intercept-url pattern="/board/all"
			access="hasRole('ROLE_USER')" /> -->

		<security:intercept-url
			pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
			
		<security:intercept-url
			pattern="/sample/admin" access="hasRole('ROLE_ADMIN')" />
			
<!-- 		<security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<security:form-login login-page="/customLogin"
			authentication-success-handler-ref="customLoginSuccess" />		
						
		<security:form-login login-page="/customLogin"/>
		
		<!-- CSRF 설정 (공격과 토큰)-->
		<security:csrf disabled="true"/>  		
		
		<security:logout logout-url="/customLogout"
			invalidate-session="true" />
			
		</security:http>
		
<!-- 	<security:authentication-manager>
		<security:authentication-provider>
		<security:jdbc-user-service data-source-ref="dataSource"/>
		<security:password-encoder ref="customPasswordEncoder"/> 
		</security:authentication-provider>
	</security:authentication-manager> -->
	
<!-- 	<security:authentication-manager>
		<security:authentication-provider>
		<security:jdbc-user-service data-source-ref="dataSource"
		 users-by-username-query="select e_id , e_pass , enabled from tbl_member where e_id = ? " 
		 authorities-by-username-query="select 
		e_id, auth from tbl_member_auth where e_id = ? " />
		<security:password-encoder ref="customPasswordEncoder"/> 
		<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager> -->
	
	<security:authentication-manager>

		<security:authentication-provider
			user-service-ref="customUserDetailsService">

			<security:password-encoder
				ref="customPasswordEncoder" />

		</security:authentication-provider>

	</security:authentication-manager>
	
	
</beans>
